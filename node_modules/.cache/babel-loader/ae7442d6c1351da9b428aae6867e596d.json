{"ast":null,"code":"var _jsxFileName = \"/Users/emilykay/workspace/employeeDirectory/new-employee-directory/src/pages/userTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst userTable = () => {\n  _s();\n\n  const [employee, setEmployee] = useState([]);\n  const [originalEmployee, setOriginalEmployee] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    showUsers();\n  }, []);\n\n  function showUsers() {\n    API.randomUser().then(res => {\n      setEmployee(res.data.results);\n      setOriginalEmployee(res.data.results);\n    }).catch(err => console.error(err));\n  }\n\n  function handleInputChange(e) {\n    const {\n      value\n    } = e.target;\n    setSearchTerm(value);\n    const newEmployee = originalEmployee.filter(person => {\n      return person.name.first.toLowerCase().includes(value.toLowerCase());\n    });\n    setEmployee(newEmployee);\n  }\n\n  function handleSubmit() {\n    //alert('button clicked...mothafu')\n    const sortedEmployee = employee.sort((a, b) => {\n      return a.name.first.localCompare(b.name.first);\n    });\n    const newEmployee = employee.filter(person => {\n      return true;\n    });\n    setEmployee(newEmployee);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \" #e8e8e8\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"mt-5\",\n      onChange: handleInputChange,\n      value: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(SubmitButton, {\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"container table table-hover text-center\",\n      style: {\n        color: \"fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [console.log(employee), employee[0] !== undefined && employee[0].name !== undefined ? employee.map(({\n          email,\n          name,\n          location\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: name.last\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: name.first\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: location.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(userTable, \"2fB73whtMpmXst4hYJ6BzY3t0Yo=\");\n\nexport default userTable;","map":{"version":3,"sources":["/Users/emilykay/workspace/employeeDirectory/new-employee-directory/src/pages/userTable.js"],"names":["React","useEffect","useState","API","userTable","employee","setEmployee","originalEmployee","setOriginalEmployee","searchTerm","setSearchTerm","showUsers","randomUser","then","res","data","results","catch","err","console","error","handleInputChange","e","value","target","newEmployee","filter","person","name","first","toLowerCase","includes","handleSubmit","sortedEmployee","sort","a","b","localCompare","background","color","log","undefined","map","email","location","last","country"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\n\nconst userTable = () => {\n  const [employee, setEmployee] = useState([]);\n  const [originalEmployee, setOriginalEmployee] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect ( () => {\n    showUsers();\n  }, []);\n\n  function showUsers() {\n    API.randomUser()\n      .then((res) => {\n        setEmployee(res.data.results);\n        setOriginalEmployee(res.data.results);\n      })\n      .catch((err) => console.error(err));\n  }\n\n  function handleInputChange(e) {\n    const { value } = e.target;\n    setSearchTerm(value);\n    const newEmployee = originalEmployee.filter((person) => {\n      return person.name.first.toLowerCase().includes(value.toLowerCase());\n    });\n    setEmployee(newEmployee);\n  }\n\n  function handleSubmit() {\n    //alert('button clicked...mothafu')\n\n    const sortedEmployee = employee.sort((a, b) => {\n      return a.name.first.localCompare(b.name.first);\n    });\n    const newEmployee = employee.filter((person) => {\n      return true;\n    });\n    setEmployee(newEmployee);\n  }\n\n  return (\n    <div style={{ background: \" #e8e8e8\" }}>\n      <input className=\"mt-5\" onChange={handleInputChange} value={searchTerm} />{\" \"}\n      <SubmitButton handleSubmit={handleSubmit} />\n      <table\n        className=\"container table table-hover text-center\"\n        style={{ color: \"fff\" }}\n      >\n        <thead>\n          <tr>\n            <th>Email</th>\n            <th>Last Name</th>\n            <th>First</th>\n            <th>Location</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {console.log(employee)}\n          {employee[0] !== undefined && employee[0].name !== undefined ? (\n            employee.map(({ email, name, location }) => {\n              return (\n                <tr>\n                  <td>{email}</td>\n                  <td>{name.last}</td>\n                  <td>{name.first}</td>\n                  <td>{location.country}</td>\n                </tr>\n              );\n            })\n          ) : (\n            <></>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default userTable;\n"]},"metadata":{},"sourceType":"module"}